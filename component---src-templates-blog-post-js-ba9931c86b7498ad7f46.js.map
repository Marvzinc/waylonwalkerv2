{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostWrapper","styled","div","BlogPostStyles","BlogPostTemplate","render","this","props","content","url","slug","description","title","cover","fluidCover","date","twitter_cover","twitterImage","undefined","src","tweetLink","encodeURIComponent","slice","meta","name","className","fluid","style","textAlign","zIndex","href","role","aria-label","margin","ref","el","markdownContainer","dangerouslySetInnerHTML","__html","display","justify","alt","marginBottom","class-name","target","rel","height","width","justifyContent","flexDirection","alignItems","maxWidth","to","React","Component","BlogPost","post","data","markdownRemark","frontmatter","childImageSharp","fixed","keywords","tags","time","path","html","fields","devto_url","devto_id","pageQuery"],"mappings":"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","file":"component---src-templates-blog-post-js-ba9931c86b7498ad7f46.js","sourcesContent":["import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport { graphql, Link } from 'gatsby'\r\nimport Layout from '../components/layout'\r\nimport Img from 'gatsby-image'\r\nimport { FiTwitter, FiGithub } from \"react-icons/fi\";\r\n\r\n\r\nconst BlogPostWrapper = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\n`\r\n\r\nconst BlogPostStyles = styled.div`\r\nbackground: rgba(51, 0, 38, .13);\r\nbackground: hsla(234, 33%, 15%, 0.66);\r\noverflow: hidden;\r\ndisplay: block;\r\nmargin: .2rem;\r\nmax-width: 1000px;\r\nwidth: 95%;\r\nposition: relative;\r\nmargin: 2rem 0;\r\npadding: 1rem;\r\nborder-radius: 2px;\r\nbox-shadow: .2rem .2rem 1rem rgba(0, 0, 0, .2);\r\ndisplay: flex;\r\nflex-direction: column;\r\ncolor: whitesmoke;\r\n\r\n@media (max-width: 700px) {\r\n  h1 {\r\n    font-size: 2.5rem;\r\n  }\r\n  width: 100%;\r\n  margin: 0rem;\r\n  padding: .3rem;\r\n}\r\n\r\na {\r\n  color: #6F6BAE;\r\n  text-decoration-color: #330026;\r\n  text-decoration-color: goldenrod; /* Wyatt chose goldenrod */\r\n}\r\np>img {\r\n  /* opacity: .8; */\r\n  box-shadow: .2rem .2rem 1rem rgba(51, 0, 38, .4);\r\n  max-width: 1000px;\r\n  width: 95vw;\r\n  align-self: center;\r\n  justify-self: center;\r\n  align-items: center;\r\n  justify-items: center;\r\n  margin: auto;\r\n}\r\n\r\np:has(>img) {\r\n  margin: 8rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\np {\r\n  // display: flex;\r\n  /* font-family: 'Amiko'; */\r\n}\r\n\r\nh2 {\r\n  margin-top: 5rem;\r\n}\r\n\r\nul {\r\n  border-left: 1px solid #FF66C4;\r\n  padding: .5rem 0 .025rem 3rem;\r\n  margin: 2rem;\r\n}\r\n\r\n\r\nblockquote {\r\n  color: #777;\r\n  border-left: 2px solid goldenrod;\r\n  font-size: 1rem;\r\n  padding: 1rem 0 1rem .5rem;\r\n  margin: 1.5rem 0;\r\n\r\n}\r\n\r\nhr {\r\n  border-top: 1px solid goldenrod;\r\n  background: none;\r\n  margin: 1rem 2rem\r\n\r\n}\r\n\r\nh1 {\r\n  margin-top: 5rem;\r\n}\r\n\r\n.tweet {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin: 1rem 0;\r\n\r\n}\r\n\r\n.tweet a {\r\n  display: inline-block;\r\n  border-radius: 5px;\r\n  padding: .5rem 1rem;\r\n  background: #645FC4;\r\n  color: #FEDD58;\r\n  text-decoration: none;\r\n  vertical-align: center;\r\n\r\n}\r\n\r\n`\r\n\r\nclass BlogPostTemplate extends React.Component {\r\n  // constructor(props) {\r\n  //   super(props)\r\n  // }\r\n\r\n  render() {\r\n    const {\r\n      content,\r\n      url,\r\n      slug,\r\n      // contentComponent,\r\n      description,\r\n      // tags,\r\n      title,\r\n      cover,\r\n      fluidCover,\r\n      date,\r\n      // helmet,\r\n      twitter_cover,\r\n      // devto_url,\r\n      // devto_id,\r\n    } = this.props\r\n    // const PostContent = contentComponent || Content\r\n\r\n    const twitterImage = twitter_cover !== undefined ? twitter_cover.src : cover.src\r\n    const shortTitle = title === null ? '' : encodeURIComponent(title.slice(0, 150))\r\n    const tweetLink = `https://twitter.com/intent/tweet?text=${shortTitle + '%0A%0A@waylonwalker%0A%0A' + url}`\r\n\r\n    return (\r\n      <>\r\n        <Helmet\r\n          meta={[\r\n            { name: 'title', content: title + ' | Waylon Walker' },\r\n            { name: 'description', content: description },\r\n            { name: 'og:title', content: title + ' | Waylon Walker' },\r\n            { name: 'og:url', content: `https://waylonwalker.com${slug}` },\r\n            { name: 'og:article:published_time', content: date },\r\n            { name: 'og:article:modified_time', content: date },\r\n            { name: 'og:description', content: description },\r\n            { name: 'og:image', content: 'https://www.waylonwalker.com' + twitterImage },\r\n            { name: 'twitter:title', content: title + ' | Waylon Walker' },\r\n            { name: 'twitter:card', content: 'summary_large_image' },\r\n            { name: 'twitter:image', content: 'https://www.waylonwalker.com' + twitterImage },\r\n            { name: 'twitter:description', content: description },\r\n          ]}\r\n\r\n        >\r\n          <title>{title}</title>\r\n        </Helmet>\r\n        <BlogPostWrapper className='blog-post'>\r\n          <BlogPostStyles>\r\n            <Img fluid={fluidCover} className='post-cover-image' />\r\n            <h1\r\n              style={{ textAlign: 'right', zIndex: 2 }}\r\n              className=\"blog title\">\r\n              {title}\r\n            </h1>\r\n            <p className='post-date'\r\n              style={{ textAlign: 'right', zIndex: 2 }}>\r\n              {date}\r\n            </p>\r\n            <div className=\"tweet\">\r\n              <a href={tweetLink} className='post-tweet-link'><span role='img' aria-label='sharing hands'>ðŸ™Œ</span> Share this post on <FiTwitter /></a>\r\n            </div>\r\n            <hr style={{ margin: '1rem 25% ' }} />\r\n            {/* <p\r\n              style={{ textAlign: 'right', zIndex: 2 }}\r\n            >\r\n              This article was also cross posted to\r\n            {\r\n                devto_url === undefined\r\n                  ? 'hi'\r\n                  : <a href={devto_url} > dev.to </a>\r\n              }\r\n              feel free to drop in to give it a â™¥ and leave comment.\r\n\r\n            </p> */}\r\n            {/* <p style={{ minHeight: '30px', margin: '0', padding: '0' }}>{description}</p> */}\r\n            <div className='post-body' ref={(el) => { this.markdownContainer = el }}\r\n              dangerouslySetInnerHTML={{ __html: content }} />\r\n            <hr style={{ margin: '3rem 25% 0' }} />\r\n            <br />\r\n            {/* <p style={{ paddingLeft: '2rem' }}> */}\r\n            <p className='post-edit' style={{ display: 'flex', justify: 'center', textAlign: 'center', margin: '3rem auto' }}>\r\n              <span role='img' aria-label=''>ðŸ‘€</span> see an issue, edit this post on <a href={`https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages${slug.slice(0, -1)}.md`} alt='edit post url' title='edit this post'> <FiGithub /> GitHub</a>\r\n            </p>\r\n            <p className='post-tip-message' style={{ display: 'flex', justify: 'center', margin: 'auto', textAlign: 'center', marginBottom: '.5rem' }}>\r\n              If you found value in this post <br />and want to send a tip.\r\n            </p>\r\n            <p class-name='post-tip-link' style={{ display: 'flex', justify: 'center' }}>\r\n              <a href=\"https://www.buymeacoffee.com/bBdtMQO\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ display: 'inline-block', margin: 'auto' }}><img src=\"https://cdn.buymeacoffee.com/buttons/lato-violet.png\" alt=\"Buy Me A Coffee\" style={{ height: '51px', width: '217px', margin: 'auto' }} /></a>\r\n            </p>\r\n\r\n            <div className=\"tweet\" style={{ justifyContent: 'center', flexDirection: 'column', alignItems: 'center', maxWidth: '300px', margin: '1rem auto', textAlign: 'center' }}>\r\n              <p>If you want to show your support, non-monetarily</p>\r\n              <a className='post-tweet-link' href={tweetLink} ><span role='img' aria-label='sharing hands'>ðŸ™Œ</span> Share this post on <FiTwitter /></a>\r\n            </div>\r\n\r\n          </BlogPostStyles>\r\n          {/* {devto_id === undefined ? '' : <DevToComments devto_id={devto_id} />}\r\n          {devto_id === undefined ? '' : <p>devtoid = {devto_id}</p>} */}\r\n          <p className='post-cta-all-posts'>\r\n            Check out my other\r\n          <Link to='/blog' style={{ margin: '.2rem' }} >blogs</Link>\r\n          </p>\r\n        </BlogPostWrapper >\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nBlogPostTemplate.propTypes = {\r\n  content: PropTypes.node.isRequired,\r\n  slug: PropTypes.node.isRequired,\r\n  contentComponent: PropTypes.func,\r\n  description: PropTypes.string,\r\n  title: PropTypes.string,\r\n  devto_url: PropTypes.string,\r\n  devto_id: PropTypes.string\r\n  // helmet: PropTypes.instanceOf(Helmet),\r\n}\r\n\r\nconst BlogPost = ({ data }) => {\r\n  const { markdownRemark: post } = data\r\n  const twitter_cover = post.frontmatter.twitter_cover !== null ? post.frontmatter.twitter_cover.childImageSharp.fixed : post.frontmatter.cover !== null ? post.frontmatter.cover.childImageSharp.fixed : ''\r\n\r\n  return (\r\n    <Layout description={post.frontmatter.description} title={post.frontmatter.title} keywords={post.frontmatter.tags} time={post.frontmatter.date} url={`https://waylonwalker.com${post.frontmatter.path}`}>\r\n      <BlogPostTemplate\r\n        content={post.html}\r\n        url={`https://waylonwalker.com${post.frontmatter.path}`}\r\n        slug={post.fields.slug}\r\n        // contentComponent={HTMLContent}\r\n        description={post.frontmatter.description}\r\n        // helmet={<Helmet title={`${post.frontmatter.title} | Blog`} />}\r\n        tags={post.frontmatter.tags}\r\n        title={post.frontmatter.title}\r\n        cover={\r\n          post.frontmatter.cover !== null\r\n            ? post.frontmatter.cover.childImageSharp.fixed\r\n            : ''\r\n        }\r\n        fluidCover={\r\n          post.frontmatter.cover !== null\r\n            ? post.frontmatter.cover.childImageSharp.fluid\r\n            : ''\r\n        }\r\n        twitter_cover={twitter_cover}\r\n        date={post.frontmatter.date}\r\n        devto_url={post.frontmatter.devto_url}\r\n        devto_id={post.frontmatter.devto_id}\r\n\r\n      />\r\n\r\n    </Layout>\r\n  )\r\n}\r\n\r\nBlogPost.propTypes = {\r\n  data: PropTypes.shape({\r\n    markdownRemark: PropTypes.object,\r\n  }),\r\n}\r\n\r\nexport {\r\n  BlogPost,\r\n  BlogPostTemplate\r\n}\r\nexport default BlogPost\r\n\r\n\r\nexport const pageQuery = graphql`\r\n  query NoteByID($id: String!) {\r\n      markdownRemark(id: {eq: $id }) {\r\n      id\r\n      html\r\n      fields {slug}\r\n      frontmatter {\r\n        date\r\n        devto_url\r\n        devto_id\r\n        title\r\n        description\r\n        # tags\r\n        path\r\n        twitter_cover {\r\n                absolutePath\r\n          childImageSharp {\r\n                fixed(width: 800, height: 418) {\r\n                ...GatsbyImageSharpFixed\r\n              }\r\n          }\r\n         }\r\n        cover {\r\n                absolutePath\r\n          childImageSharp {\r\n                fixed(width: 1000, height: 420) {\r\n                ...GatsbyImageSharpFixed\r\n              },\r\n            fluid(maxWidth: 1000, maxHeight: 420) {\r\n                ...GatsbyImageSharpFluid\r\n              }\r\n          }\r\n         }\r\n\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}